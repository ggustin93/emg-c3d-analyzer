-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.bfr_monitoring (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id uuid,
  target_pressure_aop double precision NOT NULL DEFAULT 50.0,
  actual_pressure_aop double precision NOT NULL,
  safety_compliant boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  cuff_pressure_mmhg double precision CHECK (cuff_pressure_mmhg IS NULL OR cuff_pressure_mmhg >= 0::double precision),
  systolic_bp_mmhg double precision CHECK (systolic_bp_mmhg IS NULL OR systolic_bp_mmhg >= 80::double precision AND systolic_bp_mmhg <= 250::double precision),
  diastolic_bp_mmhg double precision CHECK (diastolic_bp_mmhg IS NULL OR diastolic_bp_mmhg >= 40::double precision AND diastolic_bp_mmhg <= 150::double precision),
  measurement_timestamp timestamp with time zone,
  measurement_method text DEFAULT 'automatic'::text CHECK (measurement_method = ANY (ARRAY['automatic'::text, 'manual'::text, 'estimated'::text])),
  CONSTRAINT bfr_monitoring_pkey PRIMARY KEY (id),
  CONSTRAINT bfr_monitoring_mvp_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.therapy_sessions(id)
);
CREATE TABLE public.c3d_technical_data (
  session_id uuid NOT NULL,
  original_sampling_rate real CHECK (original_sampling_rate IS NULL OR original_sampling_rate > 0::double precision),
  original_duration_seconds real,
  original_sample_count integer,
  channel_count integer CHECK (channel_count IS NULL OR channel_count > 0),
  channel_names ARRAY DEFAULT ARRAY[]::text[],
  sampling_rate real,
  duration_seconds real,
  frame_count integer,
  extracted_at timestamp with time zone DEFAULT now(),
  CONSTRAINT c3d_technical_data_pkey PRIMARY KEY (session_id),
  CONSTRAINT c3d_technical_data_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.therapy_sessions(id)
);
CREATE TABLE public.emg_statistics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id uuid,
  channel_name text NOT NULL,
  total_contractions integer NOT NULL DEFAULT 0 CHECK (total_contractions >= 0),
  good_contractions integer NOT NULL DEFAULT 0 CHECK (good_contractions >= 0),
  compliance_rate double precision NOT NULL DEFAULT 0.0 CHECK (compliance_rate >= 0.0::double precision AND compliance_rate <= 1.0::double precision),
  mvc_value double precision NOT NULL CHECK (mvc_value > 0::double precision),
  mvc_threshold double precision NOT NULL CHECK (mvc_threshold > 0::double precision),
  mvc_threshold_actual_value double precision,
  total_time_under_tension_ms double precision CHECK (total_time_under_tension_ms >= 0::double precision),
  avg_duration_ms double precision CHECK (avg_duration_ms >= 0::double precision),
  max_duration_ms double precision CHECK (max_duration_ms >= 0::double precision),
  min_duration_ms double precision CHECK (min_duration_ms >= 0::double precision),
  duration_threshold_actual_value double precision,
  avg_amplitude double precision CHECK (avg_amplitude >= 0::double precision),
  max_amplitude double precision CHECK (max_amplitude >= 0::double precision),
  rms_mean double precision CHECK (rms_mean >= 0::double precision),
  rms_std double precision CHECK (rms_std >= 0::double precision),
  mav_mean double precision CHECK (mav_mean >= 0::double precision),
  mav_std double precision CHECK (mav_std >= 0::double precision),
  mpf_mean double precision CHECK (mpf_mean >= 0::double precision),
  mpf_std double precision CHECK (mpf_std >= 0::double precision),
  mdf_mean double precision CHECK (mdf_mean >= 0::double precision),
  mdf_std double precision CHECK (mdf_std >= 0::double precision),
  fatigue_index_mean double precision,
  fatigue_index_std double precision CHECK (fatigue_index_std >= 0::double precision),
  fatigue_index_fi_nsm5 double precision,
  signal_quality_score double precision CHECK (signal_quality_score >= 0.0::double precision AND signal_quality_score <= 1.0::double precision),
  created_at timestamp with time zone DEFAULT now(),
  mvc_contraction_count integer DEFAULT 0 CHECK (mvc_contraction_count >= 0),
  duration_contraction_count integer DEFAULT 0 CHECK (duration_contraction_count >= 0),
  CONSTRAINT emg_statistics_pkey PRIMARY KEY (id),
  CONSTRAINT emg_statistics_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.therapy_sessions(id)
);
CREATE TABLE public.patients (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  therapist_id uuid NOT NULL,
  patient_code text NOT NULL DEFAULT ('P'::text || lpad((nextval('patient_code_seq'::regclass))::text, 3, '0'::text)) UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  date_of_birth date NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT patients_pkey PRIMARY KEY (id),
  CONSTRAINT patients_therapist_id_fkey FOREIGN KEY (therapist_id) REFERENCES public.therapists(id)
);
CREATE TABLE public.performance_scores (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id uuid,
  overall_score double precision NOT NULL DEFAULT 0.0 CHECK (overall_score >= 0.0::double precision AND overall_score <= 100.0::double precision),
  compliance_score double precision NOT NULL DEFAULT 0.0 CHECK (compliance_score >= 0.0::double precision AND compliance_score <= 100.0::double precision),
  symmetry_score double precision CHECK (symmetry_score >= 0.0::double precision AND symmetry_score <= 100.0::double precision),
  effort_score double precision CHECK (effort_score >= 0.0::double precision AND effort_score <= 100.0::double precision),
  game_score double precision CHECK (game_score >= 0.0::double precision AND game_score <= 100.0::double precision),
  left_muscle_compliance double precision CHECK (left_muscle_compliance >= 0.0::double precision AND left_muscle_compliance <= 100.0::double precision),
  right_muscle_compliance double precision CHECK (right_muscle_compliance >= 0.0::double precision AND right_muscle_compliance <= 100.0::double precision),
  completion_rate_left double precision CHECK (completion_rate_left >= 0.0::double precision AND completion_rate_left <= 1.0::double precision),
  completion_rate_right double precision CHECK (completion_rate_right >= 0.0::double precision AND completion_rate_right <= 1.0::double precision),
  intensity_rate_left double precision CHECK (intensity_rate_left >= 0.0::double precision AND intensity_rate_left <= 1.0::double precision),
  intensity_rate_right double precision CHECK (intensity_rate_right >= 0.0::double precision AND intensity_rate_right <= 1.0::double precision),
  duration_rate_left double precision,
  duration_rate_right double precision CHECK (duration_rate_right >= 0.0::double precision AND duration_rate_right <= 1.0::double precision),
  weight_compliance double precision NOT NULL DEFAULT 0.40 CHECK (weight_compliance >= 0.0::double precision AND weight_compliance <= 1.0::double precision),
  weight_symmetry double precision NOT NULL DEFAULT 0.25 CHECK (weight_symmetry >= 0.0::double precision AND weight_symmetry <= 1.0::double precision),
  weight_effort double precision NOT NULL DEFAULT 0.20 CHECK (weight_effort >= 0.0::double precision AND weight_effort <= 1.0::double precision),
  weight_game double precision NOT NULL DEFAULT 0.15 CHECK (weight_game >= 0.0::double precision AND weight_game <= 1.0::double precision),
  weight_completion double precision NOT NULL DEFAULT 0.333 CHECK (weight_completion >= 0.0::double precision AND weight_completion <= 1.0::double precision),
  weight_intensity double precision NOT NULL DEFAULT 0.333 CHECK (weight_intensity >= 0.0::double precision AND weight_intensity <= 1.0::double precision),
  weight_duration double precision NOT NULL DEFAULT 0.334 CHECK (weight_duration >= 0.0::double precision AND weight_duration <= 1.0::double precision),
  bfr_compliant boolean NOT NULL DEFAULT true,
  bfr_pressure_aop double precision CHECK (bfr_pressure_aop >= 0.0::double precision AND bfr_pressure_aop <= 100.0::double precision),
  rpe_post_session integer CHECK (rpe_post_session >= 0 AND rpe_post_session <= 10),
  game_points_achieved integer CHECK (game_points_achieved >= 0),
  game_points_max integer CHECK (game_points_max >= 0),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT performance_scores_pkey PRIMARY KEY (id),
  CONSTRAINT performance_scores_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.therapy_sessions(id)
);
CREATE TABLE public.processing_parameters (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id uuid,
  sampling_rate_hz double precision NOT NULL CHECK (sampling_rate_hz > 0::double precision),
  filter_low_cutoff_hz double precision NOT NULL DEFAULT 20.0,
  filter_high_cutoff_hz double precision NOT NULL DEFAULT 500.0,
  filter_order integer NOT NULL DEFAULT 4 CHECK (filter_order > 0 AND filter_order <= 8),
  rms_window_ms double precision NOT NULL DEFAULT 50.0 CHECK (rms_window_ms > 0::double precision AND rms_window_ms <= 1000::double precision),
  rms_overlap_percent double precision NOT NULL DEFAULT 50.0 CHECK (rms_overlap_percent >= 0::double precision AND rms_overlap_percent < 100::double precision),
  mvc_window_seconds double precision NOT NULL DEFAULT 3.0 CHECK (mvc_window_seconds > 0::double precision AND mvc_window_seconds <= 30::double precision),
  mvc_threshold_percentage double precision NOT NULL DEFAULT 75.0 CHECK (mvc_threshold_percentage > 0::double precision AND mvc_threshold_percentage <= 100::double precision),
  processing_version text NOT NULL DEFAULT '1.0'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT processing_parameters_pkey PRIMARY KEY (id),
  CONSTRAINT processing_parameters_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.therapy_sessions(id)
);
CREATE TABLE public.researcher_profiles (
  id uuid NOT NULL,
  full_name text NOT NULL,
  institution text NOT NULL,
  department text,
  role text NOT NULL DEFAULT 'researcher'::text CHECK (role = ANY (ARRAY['admin'::text, 'clinical_specialist'::text, 'researcher'::text])),
  access_level text NOT NULL DEFAULT 'basic'::text CHECK (access_level = ANY (ARRAY['full'::text, 'advanced'::text, 'basic'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  last_login timestamp with time zone,
  CONSTRAINT researcher_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT researcher_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.scoring_configuration (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  configuration_name text NOT NULL,
  description text,
  weight_compliance numeric NOT NULL DEFAULT 0.400,
  weight_symmetry numeric NOT NULL DEFAULT 0.250,
  weight_effort numeric NOT NULL DEFAULT 0.200,
  weight_game numeric NOT NULL DEFAULT 0.150,
  weight_completion numeric NOT NULL DEFAULT 0.333,
  weight_intensity numeric NOT NULL DEFAULT 0.333,
  weight_duration numeric NOT NULL DEFAULT 0.334,
  active boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  therapist_id uuid,
  patient_id uuid,
  CONSTRAINT scoring_configuration_pkey PRIMARY KEY (id),
  CONSTRAINT scoring_configuration_therapist_id_fkey FOREIGN KEY (therapist_id) REFERENCES public.therapists(id),
  CONSTRAINT scoring_configuration_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(id)
);
CREATE TABLE public.session_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id uuid,
  mvc_threshold_percentage double precision NOT NULL DEFAULT 75.0 CHECK (mvc_threshold_percentage > 0::double precision AND mvc_threshold_percentage <= 100::double precision),
  duration_threshold_seconds double precision NOT NULL DEFAULT 2.0 CHECK (duration_threshold_seconds > 0::double precision),
  target_contractions integer NOT NULL DEFAULT 12 CHECK (target_contractions > 0),
  bfr_enabled boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  expected_contractions_per_muscle integer DEFAULT 12 CHECK (expected_contractions_per_muscle > 0),
  CONSTRAINT session_settings_pkey PRIMARY KEY (id),
  CONSTRAINT session_settings_mvp_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.therapy_sessions(id)
);
CREATE TABLE public.therapists (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT therapists_pkey PRIMARY KEY (id),
  CONSTRAINT therapists_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.therapy_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  file_path text NOT NULL UNIQUE,
  file_hash text NOT NULL UNIQUE,
  file_size_bytes bigint NOT NULL CHECK (file_size_bytes > 0),
  patient_id text,
  therapist_id uuid,
  session_id text,
  session_date timestamp with time zone,
  processing_status text DEFAULT 'pending'::text CHECK (processing_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text, 'reprocessing'::text])),
  processing_error_message text,
  created_at timestamp with time zone DEFAULT now(),
  processed_at timestamp with time zone,
  updated_at timestamp with time zone DEFAULT now(),
  analytics_cache jsonb DEFAULT '{}'::jsonb,
  cache_hits integer DEFAULT 0 CHECK (cache_hits >= 0),
  last_accessed_at timestamp with time zone DEFAULT now(),
  processing_time_ms double precision CHECK (processing_time_ms >= 0::double precision),
  game_metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT therapy_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT fk_therapy_sessions_therapist FOREIGN KEY (therapist_id) REFERENCES public.therapists(id),
  CONSTRAINT fk_therapy_sessions_patient FOREIGN KEY (patient_id) REFERENCES public.patients(patient_code)
);